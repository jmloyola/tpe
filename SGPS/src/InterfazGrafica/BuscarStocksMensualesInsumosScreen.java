/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Juan
 */
public class BuscarStocksMensualesInsumosScreen extends javax.swing.JFrame {
    
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;   

    /**
     * Creates new form BuscarStocksMensualesInsumosScreen
     */
    public BuscarStocksMensualesInsumosScreen() {
        initComponents();
        try {
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/postgres", "postgres", "root");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error en conexión", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parametroABuscarPanel = new javax.swing.JPanel();
        parametroLabel = new javax.swing.JLabel();
        valorLabel = new javax.swing.JLabel();
        parametroComboBox = new javax.swing.JComboBox();
        valorTextField = new javax.swing.JTextField();
        buscarStocksMensualesInsumosButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stocksMensualesInsumosTable = new javax.swing.JTable();
        salirButton = new javax.swing.JButton();
        imprimirButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Buscar Stocks Mensuales Insumos");
        setAlwaysOnTop(true);
        setResizable(false);

        parametroABuscarPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese el parámetro y el valor por el que buscar:"));

        parametroLabel.setText("Parámetro de Búsqueda:");

        valorLabel.setText("Valor:");

        parametroComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Descripcion", "Fecha" }));
        parametroComboBox.setSelectedIndex(-1);

        valorTextField.setPreferredSize(new java.awt.Dimension(150, 20));

        buscarStocksMensualesInsumosButton.setText("Buscar");
        buscarStocksMensualesInsumosButton.setPreferredSize(new java.awt.Dimension(65, 60));
        buscarStocksMensualesInsumosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarStocksMensualesInsumosButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout parametroABuscarPanelLayout = new javax.swing.GroupLayout(parametroABuscarPanel);
        parametroABuscarPanel.setLayout(parametroABuscarPanelLayout);
        parametroABuscarPanelLayout.setHorizontalGroup(
            parametroABuscarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametroABuscarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parametroABuscarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parametroLabel)
                    .addComponent(valorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parametroABuscarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parametroComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscarStocksMensualesInsumosButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parametroABuscarPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {parametroComboBox, valorTextField});

        parametroABuscarPanelLayout.setVerticalGroup(
            parametroABuscarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametroABuscarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parametroABuscarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parametroABuscarPanelLayout.createSequentialGroup()
                        .addGroup(parametroABuscarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parametroLabel)
                            .addComponent(parametroComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(parametroABuscarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(valorLabel)
                            .addComponent(valorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(buscarStocksMensualesInsumosButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        stocksMensualesInsumosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Descripcion", "Fecha", "Inicio", "Ingreso", "Egreso", "Cantidad Calculada", "Cantidad Real", "Diferencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(stocksMensualesInsumosTable);

        salirButton.setText("Salir");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        imprimirButton.setText("Imprimir");
        imprimirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parametroABuscarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(imprimirButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salirButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parametroABuscarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salirButton)
                    .addComponent(imprimirButton))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1116, 607));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_salirButtonActionPerformed

    private void imprimirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirButtonActionPerformed
        try{
            stocksMensualesInsumosTable.print(JTable.PrintMode.FIT_WIDTH);
        }catch(java.awt.print.PrinterException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error al imprimir", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_imprimirButtonActionPerformed

    private void buscarStocksMensualesInsumosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarStocksMensualesInsumosButtonActionPerformed
        if (parametroComboBox.getSelectedIndex() >= 0){
            if (!valorTextField.getText().equals("")){
                switch(parametroComboBox.getSelectedIndex()){
                    case 0:
                        try{
                            String sql = "SELECT I_Descripcion_CaracterizadoEn AS \"Descripción Insumo\","
                                                + "SM_I_Fecha AS \"Fecha\","
                                                + "SM_I_Inicio AS \"Inicio\","
                                                + "SM_I_Ingreso AS \"Ingreso\","
                                                + "SM_I_Egreso AS \"Egreso\","
                                                + "SM_I_CantidadCalculada AS \"Cant Calculada\","
                                                + "SM_I_CantidadReal AS \"Cant Real\","
                                                + "SM_I_Diferencia AS \"Diferencia\" "
                                    + "FROM StocksMensualesInsumos WHERE I_Descripcion_CaracterizadoEn = ? ORDER BY SM_I_Fecha";
                            pst = conn.prepareStatement(sql);

                            pst.setString(1,valorTextField.getText().toUpperCase());

                            rs = pst.executeQuery();
                            stocksMensualesInsumosTable.setModel(DbUtils.resultSetToTableModel(rs));
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(this, e.getMessage(), "Error al realizar la búsqueda de stocks mensuales de insumos", JOptionPane.ERROR_MESSAGE);
                        }
                        break;
                    case 1:
                        try{
                            String sql = "SELECT I_Descripcion_CaracterizadoEn AS \"Descripción Insumo\","
                                                + "SM_I_Fecha AS \"Fecha\","
                                                + "SM_I_Inicio AS \"Inicio\","
                                                + "SM_I_Ingreso AS \"Ingreso\","
                                                + "SM_I_Egreso AS \"Egreso\","
                                                + "SM_I_CantidadCalculada AS \"Cant Calculada\","
                                                + "SM_I_CantidadReal AS \"Cant Real\","
                                                + "SM_I_Diferencia AS \"Diferencia\" "
                                    + "FROM StocksMensualesInsumos WHERE SM_I_Fecha = ? ORDER BY I_Descripcion_CaracterizadoEn";
                            pst = conn.prepareStatement(sql);

                            int anio = Integer.parseInt(valorTextField.getText().substring(0, 4));
                            int mes = Integer.parseInt(valorTextField.getText().substring(5, 7)) - 1; // DEBO RESTAR UNO PORQUE EN JAVA LOS MESES EMPIEZAN EN 0 !!!!!!! o.0
                            int dia = Integer.parseInt(valorTextField.getText().substring(8, 10));
                            Calendar fechaIngresada = new GregorianCalendar(anio, mes, dia);
                            
                            java.util.Date fecha = new java.util.Date(fechaIngresada.getTimeInMillis());
                            java.sql.Date fechaActual = new java.sql.Date(fecha.getTime());                            

                            pst.setDate(1,fechaActual);

                            rs = pst.executeQuery();
                            stocksMensualesInsumosTable.setModel(DbUtils.resultSetToTableModel(rs));
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(this, e.getMessage(), "Error al realizar la búsqueda de stocks mensuales de insumos", JOptionPane.ERROR_MESSAGE);
                        }
                        break;                                                                                          
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "El valor del parámetro de búsqueda no puede ser vacio.", "Error al buscar stocks mensuales de insumo", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "El parámetro de búsqueda no puede ser vacio.", "Error al buscar stocks mensuales de insumo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buscarStocksMensualesInsumosButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarStocksMensualesInsumosScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarStocksMensualesInsumosScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarStocksMensualesInsumosScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarStocksMensualesInsumosScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscarStocksMensualesInsumosScreen().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarStocksMensualesInsumosButton;
    private javax.swing.JButton imprimirButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel parametroABuscarPanel;
    private javax.swing.JComboBox parametroComboBox;
    private javax.swing.JLabel parametroLabel;
    private javax.swing.JButton salirButton;
    private javax.swing.JTable stocksMensualesInsumosTable;
    private javax.swing.JLabel valorLabel;
    private javax.swing.JTextField valorTextField;
    // End of variables declaration//GEN-END:variables
}
