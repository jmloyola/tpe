/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Juan
 */
public class NuevoEmpleadoScreen extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    
    /**
     * Creates new form NuevoEmpleadoScreen
     */
    public NuevoEmpleadoScreen() {
        initComponents();
        try {
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/postgres", "postgres", "root");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error en conexion", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelarNuevoEmpleadoButton = new javax.swing.JButton();
        aceptarNuevoEmpleadoButton = new javax.swing.JButton();
        valoresAIngresarEmpleadoPanel = new javax.swing.JPanel();
        nombreEmpleadoLabel = new javax.swing.JLabel();
        dniEmpleadoLabel = new javax.swing.JLabel();
        telefonoEmpleadoLabel = new javax.swing.JLabel();
        fechaIngresoEmpleadoLabel = new javax.swing.JLabel();
        numeroLegajoEmpleadoLabel = new javax.swing.JLabel();
        sueldoLabel = new javax.swing.JLabel();
        cuilLabel = new javax.swing.JLabel();
        estadoCivilLabel = new javax.swing.JLabel();
        cantidadHijosLabel = new javax.swing.JLabel();
        domicilioLabel = new javax.swing.JLabel();
        codigoPostalLabel = new javax.swing.JLabel();
        paisResidenciaLabel = new javax.swing.JLabel();
        provinciaResidenciaLabel = new javax.swing.JLabel();
        ciudadResidenciaLabel = new javax.swing.JLabel();
        categoriaLabel = new javax.swing.JLabel();
        nombreTextField = new javax.swing.JTextField();
        cuilTextField = new javax.swing.JTextField();
        estadoCivilComboBox = new javax.swing.JComboBox();
        domicilioTextField = new javax.swing.JTextField();
        paisResidenciaTextField = new javax.swing.JTextField();
        provinciaResidenciaTextField = new javax.swing.JTextField();
        ciudadResidenciaTextField = new javax.swing.JTextField();
        categoriaComboBox = new javax.swing.JComboBox();
        dniFormattedTextField = new javax.swing.JFormattedTextField();
        telefonoFormattedTextField = new javax.swing.JFormattedTextField();
        numeroLegajoFormattedTextField = new javax.swing.JFormattedTextField();
        sueldoFormattedTextField = new javax.swing.JFormattedTextField();
        cantidadHijosFormattedTextField = new javax.swing.JFormattedTextField();
        codigoPostalFormattedTextField = new javax.swing.JFormattedTextField();
        referenciaCamposObligatoriosLabel = new javax.swing.JLabel();
        nombreCampoObligatorioLabel = new javax.swing.JLabel();
        dniCampoObligatorioLabel = new javax.swing.JLabel();
        telefonoCampoObligatorioLabel = new javax.swing.JLabel();
        fechaIngresoCampoObligatorioLabel = new javax.swing.JLabel();
        numeroLegajoCampoObligatorioLabel = new javax.swing.JLabel();
        sueldoCampoObligatorioLabel = new javax.swing.JLabel();
        cuilCampoObligatorioLabel = new javax.swing.JLabel();
        estadoCivilCampoObligatorioLabel = new javax.swing.JLabel();
        cantidadHijosCampoObligatorioLabel = new javax.swing.JLabel();
        domicilioCampoObligatorioLabel = new javax.swing.JLabel();
        codigoPostalCampoObligatorioLabel = new javax.swing.JLabel();
        paisResidenciaCampoObligatorioLabel = new javax.swing.JLabel();
        provinciaResidenciaCampoObligatorioLabel = new javax.swing.JLabel();
        ciudadResidenciaCampoObligatorioLabel = new javax.swing.JLabel();
        categoriaCampoObligatorioLabel = new javax.swing.JLabel();
        fechaIngresoDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Nuevo Empleado");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(500, 700));
        setPreferredSize(new java.awt.Dimension(500, 700));
        setResizable(false);

        cancelarNuevoEmpleadoButton.setText("Cancelar");
        cancelarNuevoEmpleadoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarNuevoEmpleadoButtonActionPerformed(evt);
            }
        });

        aceptarNuevoEmpleadoButton.setText("Aceptar");
        aceptarNuevoEmpleadoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarNuevoEmpleadoButtonActionPerformed(evt);
            }
        });

        valoresAIngresarEmpleadoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ingrese la informacion del nuevo empleado:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        nombreEmpleadoLabel.setText("Nombre y Apellido: ");

        dniEmpleadoLabel.setText("DNI:");

        telefonoEmpleadoLabel.setText("Telefono:");

        fechaIngresoEmpleadoLabel.setText("Fecha Ingreso:");

        numeroLegajoEmpleadoLabel.setText("Numero de Legajo:");

        sueldoLabel.setText("Sueldo:");

        cuilLabel.setText("CUIL: ");

        estadoCivilLabel.setText("Estado Civil:");

        cantidadHijosLabel.setText("Cantidad de Hijos:");

        domicilioLabel.setText("Domicilio:");

        codigoPostalLabel.setText("Codigo Postal:");

        paisResidenciaLabel.setText("Pais de Residencia:");

        provinciaResidenciaLabel.setText("Provincia de Residencia:");

        ciudadResidenciaLabel.setText("Ciudad de Residencia:");

        categoriaLabel.setText("Categoria:");

        nombreTextField.setToolTipText("");
        nombreTextField.setPreferredSize(new java.awt.Dimension(200, 20));

        estadoCivilComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Soltero/a", "Casado/a", "Divorciado/a", "Viudo/a" }));
        estadoCivilComboBox.setSelectedIndex(-1);

        categoriaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Categoria A", "Categoria B", "Categoria A1", "Categoria A2", "Operario Laboratorio Categoria A", "Operario Laboratorio Categoria A1", "Encargado" }));
        categoriaComboBox.setSelectedIndex(-1);

        dniFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        telefonoFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        numeroLegajoFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        sueldoFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        cantidadHijosFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        codigoPostalFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        referenciaCamposObligatoriosLabel.setForeground(new java.awt.Color(255, 0, 0));
        referenciaCamposObligatoriosLabel.setText("* Campos Obligatorios");

        nombreCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        nombreCampoObligatorioLabel.setText("*");

        dniCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        dniCampoObligatorioLabel.setText("*");

        telefonoCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        telefonoCampoObligatorioLabel.setText("*");

        fechaIngresoCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        fechaIngresoCampoObligatorioLabel.setText("*");

        numeroLegajoCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        numeroLegajoCampoObligatorioLabel.setText("*");

        sueldoCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        sueldoCampoObligatorioLabel.setText("*");

        cuilCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        cuilCampoObligatorioLabel.setText("*");

        estadoCivilCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        estadoCivilCampoObligatorioLabel.setText("*");

        cantidadHijosCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        cantidadHijosCampoObligatorioLabel.setText("*");

        domicilioCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        domicilioCampoObligatorioLabel.setText("*");

        codigoPostalCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        codigoPostalCampoObligatorioLabel.setText("*");

        paisResidenciaCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        paisResidenciaCampoObligatorioLabel.setText("*");

        provinciaResidenciaCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        provinciaResidenciaCampoObligatorioLabel.setText("*");

        ciudadResidenciaCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        ciudadResidenciaCampoObligatorioLabel.setText("*");

        categoriaCampoObligatorioLabel.setForeground(new java.awt.Color(255, 0, 0));
        categoriaCampoObligatorioLabel.setText("*");

        fechaIngresoDateChooser.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout valoresAIngresarEmpleadoPanelLayout = new javax.swing.GroupLayout(valoresAIngresarEmpleadoPanel);
        valoresAIngresarEmpleadoPanel.setLayout(valoresAIngresarEmpleadoPanelLayout);
        valoresAIngresarEmpleadoPanelLayout.setHorizontalGroup(
            valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valoresAIngresarEmpleadoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(valoresAIngresarEmpleadoPanelLayout.createSequentialGroup()
                        .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreEmpleadoLabel)
                            .addComponent(dniEmpleadoLabel)
                            .addComponent(telefonoEmpleadoLabel)
                            .addComponent(numeroLegajoEmpleadoLabel)
                            .addComponent(sueldoLabel)
                            .addComponent(cuilLabel)
                            .addComponent(estadoCivilLabel)
                            .addComponent(cantidadHijosLabel)
                            .addComponent(domicilioLabel)
                            .addComponent(codigoPostalLabel)
                            .addComponent(paisResidenciaLabel)
                            .addComponent(provinciaResidenciaLabel)
                            .addComponent(ciudadResidenciaLabel)
                            .addComponent(categoriaLabel)
                            .addComponent(fechaIngresoEmpleadoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dniFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telefonoFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechaIngresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numeroLegajoFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sueldoFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cuilTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estadoCivilComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cantidadHijosFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(domicilioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codigoPostalFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paisResidenciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(provinciaResidenciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ciudadResidenciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreCampoObligatorioLabel)
                            .addComponent(cuilCampoObligatorioLabel)
                            .addComponent(estadoCivilCampoObligatorioLabel)
                            .addComponent(domicilioCampoObligatorioLabel)
                            .addComponent(paisResidenciaCampoObligatorioLabel)
                            .addComponent(provinciaResidenciaCampoObligatorioLabel)
                            .addComponent(ciudadResidenciaCampoObligatorioLabel)
                            .addComponent(categoriaCampoObligatorioLabel)
                            .addComponent(dniCampoObligatorioLabel)
                            .addComponent(telefonoCampoObligatorioLabel)
                            .addComponent(sueldoCampoObligatorioLabel)
                            .addComponent(cantidadHijosCampoObligatorioLabel)
                            .addComponent(codigoPostalCampoObligatorioLabel)
                            .addComponent(fechaIngresoCampoObligatorioLabel)
                            .addComponent(numeroLegajoCampoObligatorioLabel)))
                    .addComponent(referenciaCamposObligatoriosLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        valoresAIngresarEmpleadoPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cantidadHijosFormattedTextField, categoriaComboBox, ciudadResidenciaTextField, codigoPostalFormattedTextField, cuilTextField, dniFormattedTextField, domicilioTextField, estadoCivilComboBox, fechaIngresoDateChooser, nombreTextField, numeroLegajoFormattedTextField, paisResidenciaTextField, provinciaResidenciaTextField, sueldoFormattedTextField, telefonoFormattedTextField});

        valoresAIngresarEmpleadoPanelLayout.setVerticalGroup(
            valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valoresAIngresarEmpleadoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreEmpleadoLabel)
                    .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dniEmpleadoLabel)
                    .addComponent(dniFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dniCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefonoEmpleadoLabel)
                    .addComponent(telefonoFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefonoCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fechaIngresoCampoObligatorioLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(fechaIngresoEmpleadoLabel))
                    .addComponent(fechaIngresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroLegajoEmpleadoLabel)
                    .addComponent(numeroLegajoFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numeroLegajoCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sueldoLabel)
                    .addComponent(sueldoFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sueldoCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuilLabel)
                    .addComponent(cuilTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cuilCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(estadoCivilLabel)
                    .addComponent(estadoCivilComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estadoCivilCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantidadHijosLabel)
                    .addComponent(cantidadHijosFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantidadHijosCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(domicilioLabel)
                    .addComponent(domicilioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(domicilioCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoPostalLabel)
                    .addComponent(codigoPostalFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoPostalCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paisResidenciaLabel)
                    .addComponent(paisResidenciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paisResidenciaCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(provinciaResidenciaLabel)
                    .addComponent(provinciaResidenciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(provinciaResidenciaCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ciudadResidenciaLabel)
                    .addComponent(ciudadResidenciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciudadResidenciaCampoObligatorioLabel))
                .addGap(18, 18, 18)
                .addGroup(valoresAIngresarEmpleadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoriaLabel)
                    .addComponent(categoriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoriaCampoObligatorioLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(referenciaCamposObligatoriosLabel))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valoresAIngresarEmpleadoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aceptarNuevoEmpleadoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelarNuevoEmpleadoButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valoresAIngresarEmpleadoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarNuevoEmpleadoButton)
                    .addComponent(aceptarNuevoEmpleadoButton))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(398, 696));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarNuevoEmpleadoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarNuevoEmpleadoButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarNuevoEmpleadoButtonActionPerformed

    private void aceptarNuevoEmpleadoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarNuevoEmpleadoButtonActionPerformed
        if (!nombreTextField.getText().equals("")){
            if (!dniFormattedTextField.getText().equals("")){
                if (!telefonoFormattedTextField.getText().equals("")){
                    if (fechaIngresoDateChooser.getDate() != null){
                        if (!numeroLegajoFormattedTextField.getText().equals("")){
                            if (!sueldoFormattedTextField.getText().equals("")){
                                if (!cuilTextField.getText().equals("")){
                                    if (estadoCivilComboBox.getSelectedIndex() >= 0){
                                        if (!cantidadHijosFormattedTextField.getText().equals("")){
                                            if (!domicilioTextField.getText().equals("")){
                                                if (!codigoPostalFormattedTextField.getText().equals("")){
                                                    if (!paisResidenciaTextField.getText().equals("")){
                                                        if (!provinciaResidenciaTextField.getText().equals("")){
                                                            if (!ciudadResidenciaTextField.getText().equals("")){
                                                                if (categoriaComboBox.getSelectedIndex() >= 0){
                                                                    //codigo para dar el empleado de alta
                                                                    try{
                                                                        String sql = "INSERT INTO empleados(" +
                                                                                    "e_nombre, e_dni, e_telefono, e_fechaingreso, e_numerolegajo, " +
                                                                                    "e_sueldo, e_cuil, e_estadocivil, e_cantidadhijos, e_domicilio, " +
                                                                                    "e_codigopostal, e_paisresidencia, e_provinciaresidencia, e_ciudadresidencia, " +
                                                                                    "e_categoria, e_estado)" +
                                                                                    "    VALUES (?, ?, ?, ?, ?, " +
                                                                                    "            ?, ?, ?, ?, ?, " +
                                                                                    "            ?, ?, ?, ?, " +
                                                                                    "            ?, ?);";
                                                                        pst = conn.prepareStatement(sql);
                                                                        pst.setString(1, nombreTextField.getText().toUpperCase());
                                                                        pst.setInt(2, Integer.parseInt(dniFormattedTextField.getText()));
                                                                        pst.setLong(3, Long.parseLong(telefonoFormattedTextField.getText()));
                                                                        // Preparo fecha
                                                                        java.sql.Date fechaIngresoSql = new java.sql.Date(fechaIngresoDateChooser.getDate().getTime());
                                                                        pst.setDate(4, fechaIngresoSql);
                                                                        pst.setInt(5, Integer.parseInt(numeroLegajoFormattedTextField.getText()));
                                                                        //pst.setFloat(6, Float.parseFloat(sueldoFormattedTextField.getText()));
                                                                        pst.setFloat(6, ((Number)sueldoFormattedTextField.getValue()).floatValue());
                                                                        pst.setString(7, cuilTextField.getText().toUpperCase());
                                                                        switch(estadoCivilComboBox.getSelectedIndex()){
                                                                            case 0:
                                                                                pst.setString(8, "Soltero");
                                                                                break;
                                                                            case 1:
                                                                                pst.setString(8, "Casado");
                                                                                break;
                                                                            case 2:
                                                                                pst.setString(8, "Divorciado");
                                                                                break;
                                                                            case 3:
                                                                                pst.setString(8, "Viudo");
                                                                                break;
                                                                        }
                                                                        pst.setInt(9, Integer.parseInt(cantidadHijosFormattedTextField.getText()));
                                                                        pst.setString(10, domicilioTextField.getText().toUpperCase());
                                                                        pst.setInt(11, Integer.parseInt(codigoPostalFormattedTextField.getText()));
                                                                        pst.setString(12, paisResidenciaTextField.getText().toUpperCase());
                                                                        pst.setString(13, provinciaResidenciaTextField.getText().toUpperCase());
                                                                        pst.setString(14, ciudadResidenciaTextField.getText().toUpperCase());
                                                                        switch(categoriaComboBox.getSelectedIndex()){
                                                                            case 0:
                                                                                pst.setString(15, "Categoria A");
                                                                                break;
                                                                            case 1:
                                                                                pst.setString(15, "Categoria B");
                                                                                break;
                                                                            case 2:
                                                                                pst.setString(15, "Categoria A1");
                                                                                break;
                                                                            case 3:
                                                                                pst.setString(15, "Categoria A2");
                                                                                break;
                                                                            case 4:
                                                                                pst.setString(15, "Operario Laboratorio Categoria A");
                                                                                break;
                                                                            case 5:
                                                                                pst.setString(15, "Operario Laboratorio Categoria A1");
                                                                                break;
                                                                            case 6:
                                                                                pst.setString(15, "Encargado");
                                                                                break;
                                                                        }
                                                                        pst.setString(16, "Activo");
                                                                        pst.execute();
                                                                        JOptionPane.showMessageDialog(this, "El nuevo empleado fue ingresado exitosamente", "Alta de empleado exitosa", JOptionPane.INFORMATION_MESSAGE);
                                                                        this.dispose();
                                                                        
                                                                    }catch(SQLException e){
                                                                        // TODO
                                                                        // Luego se deberia cambiar y colocar un mensaje personalizado dependiendo del codigo del error.
                                                                        JOptionPane.showMessageDialog(this, e, "Error al dar de alta nuevo empleado", JOptionPane.ERROR_MESSAGE);
                                                                    }
                                                                }
                                                                else{
                                                                    JOptionPane.showMessageDialog(this, "La categoria del empleado no puede ser vacia.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                                                }
                                                            }
                                                            else{
                                                                JOptionPane.showMessageDialog(this, "La ciudad de residencia del empleado no puede ser vacia.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                                            }
                                                        }
                                                        else{
                                                            JOptionPane.showMessageDialog(this, "La provincia de residencia del empleado no puede ser vacia.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                                        }
                                                    }
                                                    else{
                                                        JOptionPane.showMessageDialog(this, "El pais de residencia del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                                    }
                                                }
                                                else{
                                                    JOptionPane.showMessageDialog(this, "El codigo postal del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                                }
                                            }
                                            else{
                                                JOptionPane.showMessageDialog(this, "El domicilio del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                            }
                                        }
                                        else{
                                            JOptionPane.showMessageDialog(this, "La cantidad de hijos del empleado no puede ser vacia.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                        }
                                    }
                                    else{
                                        JOptionPane.showMessageDialog(this, "El estado civil del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                    }
                                }
                                else{
                                    JOptionPane.showMessageDialog(this, "El CUIL del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(this, "El sueldo del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "El numero de legajo del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Fecha de ingreso del empleado invalida.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "El telefono del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "El DNI del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "El nombre del empleado no puede ser vacio.", "Error en alta de empleado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_aceptarNuevoEmpleadoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoEmpleadoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoEmpleadoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoEmpleadoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoEmpleadoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevoEmpleadoScreen().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarNuevoEmpleadoButton;
    private javax.swing.JButton cancelarNuevoEmpleadoButton;
    private javax.swing.JLabel cantidadHijosCampoObligatorioLabel;
    private javax.swing.JFormattedTextField cantidadHijosFormattedTextField;
    private javax.swing.JLabel cantidadHijosLabel;
    private javax.swing.JLabel categoriaCampoObligatorioLabel;
    private javax.swing.JComboBox categoriaComboBox;
    private javax.swing.JLabel categoriaLabel;
    private javax.swing.JLabel ciudadResidenciaCampoObligatorioLabel;
    private javax.swing.JLabel ciudadResidenciaLabel;
    private javax.swing.JTextField ciudadResidenciaTextField;
    private javax.swing.JLabel codigoPostalCampoObligatorioLabel;
    private javax.swing.JFormattedTextField codigoPostalFormattedTextField;
    private javax.swing.JLabel codigoPostalLabel;
    private javax.swing.JLabel cuilCampoObligatorioLabel;
    private javax.swing.JLabel cuilLabel;
    private javax.swing.JTextField cuilTextField;
    private javax.swing.JLabel dniCampoObligatorioLabel;
    private javax.swing.JLabel dniEmpleadoLabel;
    private javax.swing.JFormattedTextField dniFormattedTextField;
    private javax.swing.JLabel domicilioCampoObligatorioLabel;
    private javax.swing.JLabel domicilioLabel;
    private javax.swing.JTextField domicilioTextField;
    private javax.swing.JLabel estadoCivilCampoObligatorioLabel;
    private javax.swing.JComboBox estadoCivilComboBox;
    private javax.swing.JLabel estadoCivilLabel;
    private javax.swing.JLabel fechaIngresoCampoObligatorioLabel;
    private com.toedter.calendar.JDateChooser fechaIngresoDateChooser;
    private javax.swing.JLabel fechaIngresoEmpleadoLabel;
    private javax.swing.JLabel nombreCampoObligatorioLabel;
    private javax.swing.JLabel nombreEmpleadoLabel;
    private javax.swing.JTextField nombreTextField;
    private javax.swing.JLabel numeroLegajoCampoObligatorioLabel;
    private javax.swing.JLabel numeroLegajoEmpleadoLabel;
    private javax.swing.JFormattedTextField numeroLegajoFormattedTextField;
    private javax.swing.JLabel paisResidenciaCampoObligatorioLabel;
    private javax.swing.JLabel paisResidenciaLabel;
    private javax.swing.JTextField paisResidenciaTextField;
    private javax.swing.JLabel provinciaResidenciaCampoObligatorioLabel;
    private javax.swing.JLabel provinciaResidenciaLabel;
    private javax.swing.JTextField provinciaResidenciaTextField;
    private javax.swing.JLabel referenciaCamposObligatoriosLabel;
    private javax.swing.JLabel sueldoCampoObligatorioLabel;
    private javax.swing.JFormattedTextField sueldoFormattedTextField;
    private javax.swing.JLabel sueldoLabel;
    private javax.swing.JLabel telefonoCampoObligatorioLabel;
    private javax.swing.JLabel telefonoEmpleadoLabel;
    private javax.swing.JFormattedTextField telefonoFormattedTextField;
    private javax.swing.JPanel valoresAIngresarEmpleadoPanel;
    // End of variables declaration//GEN-END:variables
}
